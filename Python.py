#import libarary
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
import plotly.express as px
from babel.numbers import format_currency
sns.set(style='dark')

# membaca data
bike = pd.read_csv('cleaning.csv')

# membuat halaman
def main():
    st.set_page_config(page_title="Bike Sharing Dashboard", layout="wide")

    # membuat sidebar
    st.sidebar.image("aplikasi-gowes-melayani-sewa-sepeda-di-jakarta_20200705_205830.jpg")
    st.sidebar.title("Bike Sharing Company")
    st.sidebar.markdown("Sewa sepeda dengan nyaman tanpa mengganggu kesenangan")
    selected_date = st.sidebar.date_input("Pilih tanggal")
    st.sidebar.write("Tanggal yang dipilih:", selected_date)
    
    # membuat judul dan penjelasan perusahaan
    st.title("Bike Sharing")

    st.write("Bike-sharing rental process is highly correlated to the environmental and seasonal settings. ")
    st.write("Bike sharing systems are new generation of traditional bike rentals where whole process from membership, rental and return ")
    st.write("back has become automatic. Through these systems, user is able to easily rent a bike from a particular position and return")
    st.write("back at another position. Currently, there are about over 500 bike-sharing programs around the world which is composed of")
    st.write("over 500 thousands bicycles. Today, there exists great interest in these systems due to their important role in traffic")
    st.write("environmental and health issues.")
    st.write("Apart from interesting real world applications of bike sharing systems, the characteristics of data being generated by")
    st.write("these systems make them attractive for the research. Opposed to other transport services such as bus or subway, the duration")
    st.write("of travel, departure and arrival position is explicitly recorded in these systems. This feature turns bike sharing system into")
    st.write("a virtual sensor network that can be used for sensing mobility in the city. Hence, it is expected that most of important")
    st.write("events in the city could be detected via monitoring these data")

    # menambahkan jarak 
    st.write("") 
    st.write("")  
    st.markdown("<br>", unsafe_allow_html=True)  

#membuat kolom visualisasi
    col1, col2 = st.columns(2)

    with col1:
        # Mengelompokkan data
        user = bike.groupby(['weekday_x', 'workingday_x'])['cnt_y'].sum().reset_index()
        # Membuat visualisasi
        fig, ax = plt.subplots(figsize=(12, 8)) 
        sns.barplot(ax=ax, data=user, x='weekday_x', y='cnt_y', hue='workingday_x', palette='viridis')
        plt.title('Penyewaan Sepeda Berdasarkan Akhir Pekan dan Hari Kerja', fontsize=16)
        plt.xlabel('Hari (0=Minggu, 6=Sabtu)', fontsize=14)
        plt.ylabel('Jumlah Penyewaan', fontsize=14)
        plt.legend(title='Hari Kerja', loc='upper right')
        st.pyplot(fig)

    st.write("") 

    with col2:
        season_df = bike.groupby(['yr_x', 'season_x'])['cnt_y'].sum().reset_index()

        # Memberikan deskripsi pada season
        season_mapping = {
            1: 'Musim Semi',
            2: 'Musim Panas',
            3: 'Musim Gugur',
            4: 'Musim Dingin'
        }
        season_df['season_x'] = season_df['season_x'].map(season_mapping)

        # Membuat visualisasi
        fig, ax = plt.subplots(figsize=(12, 8))  
        sns.barplot(ax=ax, data=season_df, x='yr_x', y='cnt_y', hue='season_x', palette='Set1')
        plt.title('Penyewaan Sepeda Berdasarkan Musim', fontsize=16)
        plt.xlabel('Tahun (0=2011, 1=2012)', fontsize=14)
        plt.ylabel('Jumlah Penyewaan', fontsize=14)
        plt.legend(title='Musim', loc='upper right')
        st.pyplot(fig)

    st.write("")  

    # membuat jarak 
    st.markdown("<br><br>", unsafe_allow_html=True)  


    df_jam = bike.groupby('hr')[['casual_y', 'registered_y']].sum().reset_index()

    fig, ax = plt.subplots(figsize=(16, 10))  # Increased figure size
    plt.plot(df_jam['hr'], df_jam['casual_y'], label='Casual', marker='o')
    plt.plot(df_jam['hr'], df_jam['registered_y'], label='Registered', marker='o')
    plt.title('Jumlah Penyewaan Sepeda Berdasarkan Jam', fontsize=18)
    plt.xlabel('Jam', fontsize=16)
    plt.ylabel('Jumlah Penyewaan', fontsize=16)
    plt.legend(fontsize=14)
    plt.grid(True)
    st.pyplot(fig)

    st.markdown("<br><br>", unsafe_allow_html=True)  

    #footer
    st.write("Copyright @Bike Sharing Company")

if __name__ == '__main__':
    main()
